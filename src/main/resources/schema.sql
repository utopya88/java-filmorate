CREATE TABLE IF NOT EXISTS filmrating (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating Varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name Varchar NOT NULL,
    description Varchar NOT NULL,
    releaseDate Date,
    duration INT,
    ratingId BIGINT NOT NULL,
    FOREIGN KEY (ratingId) REFERENCES filmrating (id)
);

CREATE TABLE IF NOT EXISTS genre (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name Varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS filmGenre (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    filmId BIGINT NOT NULL,
    genreId BIGINT NOT NULL,
    FOREIGN KEY (genreId) REFERENCES genre (id),
    FOREIGN KEY (filmId) REFERENCES film (id)
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name Varchar NOT NULL,
    email Varchar NOT NULL,
    login Varchar NOT NULL,
    birthday Date
);

CREATE TABLE IF NOT EXISTS friends (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userId BIGINT NOT NULL,
    friendId BIGINT NOT NULL,
    FOREIGN KEY (userId) REFERENCES users (id),
    FOREIGN KEY (friendId) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS friendRequest (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userId BIGINT NOT NULL,
    friendId BIGINT NOT NULL,
    accept BOOLEAN,
    FOREIGN KEY (userId) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS likedUsers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    filmId BIGINT NOT NULL,
    userId BIGINT NOT NULL,
    FOREIGN KEY (filmId) REFERENCES film (id),
    FOREIGN KEY (userId) REFERENCES users (id)
);